PROGRAM = a.out

UTIL_DIR = ../util

vpath %.cpp $(UTIL_DIR)/src

OBJS = main.o
UTIL_OBJS = ConfigFile.o ConfigBase.o outputVtk.o

include ../../make_setting

CUTLIB_FLAGS = -I../../include
CUTLIB_LIBS  = -L$(CUT_DIR)/lib -lCUT

PL_FLAGS = -I$(POLYLIB_DIR)/include
PL_LIBS  = -L$(POLYLIB_DIR)/lib -lMPIPOLY

TP_FLAGS = -I$(TP_DIR)/include
TP_LIBS  = -L$(TP_DIR)/lib -lTP

ifneq (, $(findstring -DCUTLIB_OCTRE, $(DEFINES)))
	OCTREE_FLAGS = -DTD_USE_NAMESPACE -I$(OCTREE_DIR)/include
	OCTREE_LIBS = -L$(OCTREE_DIR)/lib -loctree
endif

CXXFLAGS += -I$(UTIL_DIR)/include $(CUTLIB_FLAGS) $(PL_FLAGS) $(TP_FLAGS) \
            $(OCTREE_FLAGS) $(DEFINES)

LIBS = $(CUTLIB_LIBS) $(PL_LIBS) $(TP_LIBS) $(OCTREE_LIBS) -lm

PROGRAM: $(OBJS) $(UTIL_OBJS)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $(PROGRAM) $(OBJS) $(UTIL_OBJS) $(LIBS)

.cpp.o:
	$(CXX) $(CXXFLAGS) -c $<

clean:
	rm -rf *.o 

dist_clean: clean
	rm -rf $(PROGRAM) depend.inc *.vtk

depend: $(OBJS:.o=.cpp) $(UTIL_OBJS:.o=.cpp)
	@ rm -rf depend.inc
	@ for i in $^; do\
		$(CXX) $(CXXFLAGS) -MM $$i >> depend.inc;\
	done

$(PROGRAM): $(CUT_DIR)/lib/libCUT.a

-include depend.inc
